---
kind: Service
apiVersion: v1
metadata:
  name: rabbitmq01
  labels:
    app: rabbitmq
    type: LoadBalancer 
    release: {{ .Release.Name }}    
spec:
  type: NodePort
  ports:
   - name: http
     protocol: TCP
     port: 15672
     targetPort: 15672
   - name: amqp
     protocol: TCP
     port: 5672
     targetPort: 5672
  selector:
    app: rabbitmq01
---
apiVersion: v1
kind: Service
metadata:
  # The required headless service for StatefulSets
  name: rabbitmq01-hl
  labels:
    app: rabbitmq
    release: {{ .Release.Name }}
spec:
  ports:
  - port: 5672
    name: amqp
  - port: 4369
    name: epmd
  - port: 25672
    name: rabbitmq-dist
  clusterIP: None
  selector:
    app: rabbitmq01
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  labels:
    release: {{ .Release.Name }}
data:
  enabled_plugins: |
      [rabbitmq_management,rabbitmq_peer_discovery_k8s].

  rabbitmq.conf: |
      ## Cluster formation. See http://www.rabbitmq.com/cluster-formation.html to learn more.
      cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = {{ .Values.rmq.k8sdiscovery.host }}
      cluster_formation.k8s.port = {{ .Values.rmq.k8sdiscovery.port }}
      cluster_formation.k8s.scheme = https
      cluster_formation.k8s.service_name = rabbitmq01
      ## Should RabbitMQ node name be computed from the pod's hostname or IP address?
      ## IP addresses are not stable, so using [stable] hostnames is recommended when possible.
      ## Set to "hostname" to use pod hostnames.
      ## When this value is changed, so should the variable used to set the RABBITMQ_NODENAME
      ## environment variable.
      cluster_formation.k8s.address_type = ip
      ## How often should node cleanup checks run?
      cluster_formation.node_cleanup.interval = 30

      ## Set to false if automatic removal of unknown/absent nodes
      ## is desired. This can be dangerous, see
      ##  * http://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup
      ##  * https://groups.google.com/forum/#!msg/rabbitmq-users/wuOfzEywHXo/k8z_HWIkBgAJ
      cluster_formation.node_cleanup.only_log_warning = false
      cluster_partition_handling = autoheal
      ## See http://www.rabbitmq.com/ha.html#master-migration-data-locality
      queue_master_locator=min-masters
      ## See http://www.rabbitmq.com/access-control.html#loopback-users
      loopback_users.guest = false
      ##
      ## Default User / VHost
      ## ====================
      ##

       ## On first start RabbitMQ will create a vhost and a user. These
       ## config items control what gets created.
       ## Relevant doc guide: http://rabbitmq.com/access-control.html
       ##
       # default_vhost = /
       default_user = {{ .Values.rabbitmqUsername }}
       default_pass = {{ .Values.rabbitmqPassword }}

      default_permissions.configure = .*
      default_permissions.read = .*
      default_permissions.write = .*
      
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: rabbitmq
  labels:
    release: {{ .Release.Name }}    
spec:
  serviceName: rabbitmq-hl
  replicas: {{ .Values.rmq.replicas }}
  template:
    metadata:
      labels:
        app: rabbitmq01
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - rabbitmq01
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
            weight: 1
      containers:        
      - name: rabbitmq-k8s
        image: rabbitmq:3.7.3-management
        volumeMounts:
          - name: config-volume
            mountPath: /etc/rabbitmq
 #         - name: rabbitmq01
 #           mountPath: /var/lib/rabbitmq
        ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
        imagePullPolicy: Always
        env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_IP)"
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_ERLANG_COOKIE
            value: "mycookie"             
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
            - key: enabled_plugins
              path: enabled_plugins
#  volumeClaimTemplates:
#  - metadata:
#      name: rabbitmq01
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 5Gi # make this bigger in production

